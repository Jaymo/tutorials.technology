<section id="groovyclosures" role="wrapper">
== Using lambdas and closures in Groovy</title>
	<section id="groovyclosures1">
=== Defining closures</title>
		<para>
			Closures are
			<wordasword>code fragments</wordasword>
			or
			<wordasword>code blocks</wordasword>
			which can be used without
			being a
			method or a class.
		</para>
		<para>
			A closure in Groovy is defined via the following construct:
			`{list of parameters-> closure body}`
			.
			The values before the
			`->`
			sign define the parameters of the closure.

		</para>

		<para>
			For the case that only one
			parameter is used you can use the implicit
			defined
			`it`
			variable. The last statement of a closure is implicitly used to define the return value, if no return statement is
			defined. The usage of
			`it`
			variable on the automatic return statement is demonstrates in the following example.
		</para>

		<para>
			<programlisting language="java">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" parse="text" href="./examples/closures/Tiny.groovy" />
			</programlisting>
		</para>

	</section>

	<section id="groovyclosures_defaultvalues">
=== Defining default values in a closure</title>
		<para>If you define a closure you can also define default values for
			its parameters.
		</para>
		<para>
			<programlisting language="java">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" parse="text"
					href="./examples/closures/ClosureDefaultValue.groovy" />
			</programlisting>
		</para>



	</section>
	<section id="groovyclosures2">
=== Example: Using closures in the each method</title>

		<para> The Groovy collections have several methods which accept a
			closure as parameter, for example the each method.
		</para>
		<para>
			<programlisting>
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" parse="text" href="./examples/closures/ClosureEachTest.groovy" />
			</programlisting>
		</para>
	</section>
	<section id="groovyclosures_sortlist">
=== Example: Sort a list by lenght of the string</title>

		<para> The Groovy collections have several methods which accept a
			closure as parameter, for example the each method.
		</para>
		<para>
			<programlisting>
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" parse="text" href="./examples/closures/ClosureTest.groovy" />
			</programlisting>
		</para>
	</section>

	<section id="groovyclosures_with">
=== Using the with method</title>
		<para>
			Every Groovy object has a
			`with`
			method which allows to group method and property calls to an object.
			The
			`with`
			method gets a closure as parameter and every method call or property
			access in this closure is applied to the object.
		</para>
		<para>
			<programlisting language="java">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" parse="text" href="./examples/closures/WithExample.groovy" />
			</programlisting>
		</para>

	</section>
</section>