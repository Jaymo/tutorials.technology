[[gerritsetup_user">
== Creating and updating a Gerrit change request from Eclipse
	
	
		In the following description we make a change in our local
		repository and create a Gerrit change request.
	
	After getting the latest source code, when you are ready for development, create a new local branch starting from
		the origin/master branch.
	

	
		Perform some changes in your Java project. Commit the changes and
		ensure to select the
		_Add Change-Id_
		button in the
		_Git Staging_
		view.
	
	
image::gerrit_review10.png[]
			</imageobject>
			<textobject>
				<phrase>Create change request</phrase>
			</textobject>
		</mediaobject>
	
	
		The Change-ID is what uniquely identifies the change in Gerrit.
		The
		entry is initially set to
		`Change-Id: I0000000000000000000000000000000000000000`
		.
		During the commit, this is replaced with an ID generated by the Git
		tooling.
	


	
		Push the change to Gerrit. As your push configuration is configured for Gerrit, this
		should create a change. The
		Eclipse Git tooling
		shows a dialog after
		the push. This dialog contains
		error messages in case the push was not
		successful.
		Via the URL you can access the Gerrit web
		interface
		and
		analyze the
		Gerrit review.
	

	
image::gerrit_webreview10.png[]
			</imageobject>
			<textobject>
				<phrase>Create Gerrit change request</phrase>
			</textobject>
		</mediaobject>
	
	
		Do a few new changes to your Java project and commit them to your
		local Git repository. Ensure that you amend the
		existing commit. This
		makes sure the
		existing
		change id is used and avoids that Gerrit cannot
		apply your change
		because of
		a dependency cycle on the commits. Push
		your new commit
		to Gerrit, this should update the existing review
		request. The
		Eclipse Git push confirmation dialog should tell you that
		you created a new change set.
	

	
image::gerrit_webreview20.png[]
			</imageobject>
			<textobject>
				<phrase>Update Gerrit change request</phrase>
			</textobject>
		</mediaobject>
	

