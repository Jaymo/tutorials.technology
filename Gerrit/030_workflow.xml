<section id="gerrit_workflow" role="wrapper">
== Gerrit workflow

	<section id="gerritsetup_workflow3">
=== A typical Gerrit workflow

		The following describes a typical workflow of a developer who
			uploads a Gerrit review and a reviewer.
		
		
			<orderedlist>
				* 
					The developer fetches or pulls in the latest changes from the
						Git repository
					
				
				* 
					
						The developer create a new local branch based on the
						`origin/master`
						branch. This step
						is
						optional but it is considered a good practice
						to
						create an
						independent branch
						per change to avoid unnecessary
						dependencies
						between commits (Gerrit
						reviews).
					
				
				* 
					The developer implements a change(new feature, bug fix,
						documentation change) and create a commit in his local repository
						with
						these modifications.
					
				
				* 
					The developer implements (if necessary) more changes and
						amends the existing commit,
						until he is
						satisfied with the change.
					
				
			</orderedlist>
		
		
			Afterwards you perform the following steps.
			<orderedlist>
				* 
					
						Push the change to the Gerrit review system to the
						`refs/for/master`
						refspec to create a change for the master branch.
					
				
				* 
					If you receive improvement suggestions, fetch the latest
						changes and rebase your patch onto origin/master
					
				
			</orderedlist>

		
		Repeat the last three steps until the patch is finally accepted
			and merged into the codebase (or until the change is completely
			rejected). Finally you can delete your
			local branch.
		



	<section id="gerritsetup_workflow1">
=== Gerrit vs. Git workflow
		In the Gerrit scenario amending a commit
			is used to update
			the
			Gerrit change request. Using the amend operation on a published
			commit is usually
			discouraged in Git, in Gerrit it is the normal
			process.
		

	<section id="gerritsetup_workflow2">
=== Gerrit vs. GitHub workflow
		The Gerrit review system is based on the assumption that each commit
		is reviewed separately, while
		at GitHub, a complete
		branch is reviewed
		and merging with the pull request.

