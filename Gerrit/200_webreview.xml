<section id="webreview" role="wrapper">
== Using the Gerrit web interface
	<section id="webreview_reviewchangerequest">
=== Reviewing a change request
		
			Click on one change request to see the
			details of the Gerrit
			change request. Click on the commit message of the
			file name
			(highlighted in the
			screenshot)
			to see the changes in the file.
		
		
image::webreview08.png" scale="30" />
				</imageobject>
				<textobject>
					<phrase>Web review</phrase>
				</textobject>
			</mediaobject>
		
		
			You can
			double-click on
			a line to comment on the change.
		
		
image::webreview10.png[]
				</imageobject>
				<textobject>
					<phrase>Web review</phrase>
				</textobject>
			</mediaobject>
		

		
			Clicking on
			_Up to change_
			brings you back to the change.
		
		
			Gerrit allows you to review the commit
			message, which appears at
			the top of the
			file
			list. To understand the history
			of the repository
			it is important to provide a good commit message.
		

	<section id="webreview_reviewresult">
=== Publishing your review result
		
			Click on
			_Reply_
			button
			to give feedback on the change.
		

		
image::webreview12.png" scale="30" />
				</imageobject>
				<textobject>
					<phrase>Web review</phrase>
				</textobject>
			</mediaobject>
		

		
			You can give a summary of your feedback and return a review
			number between -2 and +2 (if you are a committer) or
			between
			-1 and
			+1 (if you are not a committer). If you vote -1 or
			-2, you respectively indicate that the patch still
			requires
			rework
			or that you
			disagree with the suggested change. See
			<<gerrit_voting" />
			for details of the default voting rules.
		
		
image::webreview30.png[]
				</imageobject>
				<textobject>
					<phrase>Web review</phrase>
				</textobject>
			</mediaobject>
		



	<section id="webreview_adjustingthechange">
=== Improve a change based on review feedback
		
			If the review process has resulted review comments explaining
			how to
			improve the proposed patch, the author of the
			patch (or someone
			else)
			can adjust the
			patch. The developer
			amends the
			commit in his local
			repository and
			pushes the
			improved commit
			to Gerrit. He can
			also
			adjust
			the
			commit
			message while amending the commit.
		
		
			As the developer amends the commit, the same
			_Change-Id_
			is used and the
			Gerrit review system identifies the change as update
			of the existing change.
		

		
			The
			_Git Staging_
			view allows amending the last commit by clicking the amend button
			shown in the screenshot.
		
		
image::amendwithstagingview32.png[]
				</imageobject>
				<textobject>
					<phrase>Amend flag in Git Staging view</phrase>
				</textobject>
			</mediaobject>
		
		<tip>
			
				Gerrit allows you to select which patch sets you want to compare in
				_Comparison_
				view. Typically you compare the base version with the latest patch
				set, but if e.g. you already reviewed patch set 3
				you may want to
				just see what the author changed between patchset 3 and patchset 5.
			
			
				<mediaobject>
					<imageobject>
						<imagedata fileref="images/patchsets10.png" scale="60" />
					</imageobject>
					<textobject>
						<phrase>Patch set comparison view</phrase>
					</textobject>
				</mediaobject>
			
		
		
			Once the change has reached the required quality, the
			reviewer
			can give
			a +2
			evaluation of the
			change.
		


		Depending on the settings of the Gerrit repository, the Gerrit
			review might have to be rebased. If you conflict
			happens during this
			rebase operation you can trigger this rebase directly from the web
			interface. If a change
			is
			rebased, it
			needs to be reviewed again.
		
		
image::webreview40.png[]
				</imageobject>
				<textobject>
					<phrase>Web review</phrase>
				</textobject>
			</mediaobject>
		

		Afterwards a developer with commit rights can submit the
			change.
			This is typically done by the same committer who
			voted +2.
			Depending
			on the Gerrit configuration for the project, this
			may only work
			if the
			change is based on the
			current
			origin/master branch. Gerrit
			allows the
			committer and
			contributor to
			rebase the change if
			that is not
			the case.

		

		
image::webreview50.png[]
				</imageobject>
				<textobject>
					<phrase>Web review</phrase>
				</textobject>
			</mediaobject>
		

	<section id="webreview_keyboardshortcuts">
=== Keyboard shortcuts in Gerrit

		
			Press the "?" key in the Gerrit web user interface to see the
			actions you
			can trigger via shortcuts. The available
			shortcuts depend
			on there you are in the user interface.
		

		
image::gerrit_shortcuts10.png" scale="25" />
				</imageobject>
				<textobject>
					<phrase>Gerrit shortcuts</phrase>
				</textobject>
			</mediaobject>
		
		The available shortcuts are different, depending on the page
			your are.
		


	<section id="webreview_getting">
=== Fetching a remote change into a local Git repository
		
			It is possible to fetch the changes from the Gerrit review into
			another local Git
			repository. The Gerrit page
			lists the
			commands for
			downloading the change. This is depicted in the following screenshot.
		
		
image::webreviewpull10.png[]
				</imageobject>
				<textobject>
					<phrase>Pulling in the change</phrase>
				</textobject>
			</mediaobject>
		
		
			After fetching a change, the developer can adjust the change and
			amend the commit.
			If he pushes it to Gerrit, the
			change is updated.
			Such a
			procedure
			should be coordinated by the author of the original
			change
			to avoid
			that two developers
			do the same work.
		


	<section id="webreview_gettingeclpise">
=== Fetching a remote change with Eclipse Git

		<tip>
			
				The Git tooling in Eclipse allows you to fetch a change from Gerrit.
				For this, right-click on
				the project
				<menuchoice>
					<guimenu>Team</guimenu>
					<guisubmenu>Remote</guisubmenu>
					<guisubmenu>Fetch from Gerrit</guisubmenu>
				</menuchoice>
				.
				When working with many projects, it is often easier to right-click
				on the repository instead and access
				btn:[Fetch from Gerrit]
				from there.
				You can paste the change's number (shown in the change's
				URL) and use
				<keycombo>
					<keycap>Ctrl</keycap>
					<keycap>Space</keycap>
				</keycombo>
				to expand the change number to the list of patch sets, select the
				one you want to download and fetch it into a new
				local branch.
				Afterwards you can
				to test the changes in isolation.
			
			
				<mediaobject>
					<imageobject>
						<imagedata fileref="images/webreviewpull20.png" scale="35" />
					</imageobject>
					<textobject>
						<phrase>Pulling in the change</phrase>
					</textobject>
				</mediaobject>
			
		


	<section id="webreview_editintheweb">
=== Edit a change directly via the web interface
		You can also edit directly in Gerrit. Press the edit button for this.
		
image::editingerrit10.png[]
				</imageobject>
				<textobject>
					<phrase>Edit in Gerrit</phrase>
				</textobject>
			</mediaobject>
		
		
			Afterwards select the file or the commit message you want to edit. Press save and close once you are done. After
			you
			are done with all your edits, press the
			_Publish Edit_
			.
		



