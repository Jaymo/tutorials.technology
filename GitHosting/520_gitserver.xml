<section id="gitserver" role="wrapper">
== Own Git server
	<section id="gitserver_install">
=== Hosting your own Git server
		<indexterm>
			<primary>Git server</primary>
			<secondary>configuration</secondary>
		</indexterm>

		
			As described before, you do not need a server. You can just use
			a
			file
			system or
			a public Git provider, such as
			GitHub or Bitbucket.
			Sometimes, however,
			it is convenient to have your own server, and
			installing it under
			Ubuntu is relatively easy.
		
		 First make sure you have installed the SSH tooling.

		
			<programlisting language="bourne">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="./examples/server/ssh_install.txt" />
			</programlisting>
		
		 If you have not yet installed Git on your server, you need to
			do
			this too.
		

		
			<programlisting language="bourne">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="./examples/server/installgit.txt" />
			</programlisting>
		
		 Create a new user and set a password for the Git system. 
		
			<programlisting language="bourne">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="./examples/server/user.txt" />
			</programlisting>
		
		Now log in with your Git user and create a bare repository.
		
		
			<programlisting language="bourne">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="./examples/server/repo.txt" />
			</programlisting>
		

		 Now you can push to the remote repository. 
		
			<programlisting language="bourne">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="./examples/server/commit.txt" />
			</programlisting>
		


	</section>

	<section id="gitserver_access">
=== Give write access to a Git repository
		<indexterm>
			<primary>Git server</primary>
			<secondary>write access</secondary>
		</indexterm>
		
			The typical setup based on the created "git" user from above is
			that
			the
			public SSH key of each user is added to the
			`~/.ssh/authorized_keys`
			file of the "git" user. Afterwards everyone can access the system
			using the "git" user.
		
		Alternatively you could use LDAP authentication or other special
			configurations.
		

	</section>

	<section id="gitserver_security">
=== Security setup for the git user
		<indexterm>
			<primary>Git server</primary>
			<secondary>security</secondary>
		</indexterm>
		<indexterm>
			<primary>Git server</primary>
			<secondary>git-shell</secondary>
		</indexterm>
		
			The Git installation provides a specialized shell, which can be
			assigned to the user. Typically this shell is located under in
			`/usr/bin/git-shell`
			and can be assigned to the user via the
			`/etc/passwd`
			configuration file to the Git user. If you assign this shell to the
			Git user, this user can also perform git commands which add safety to
			your Git setup.
		
	</section>
</section>