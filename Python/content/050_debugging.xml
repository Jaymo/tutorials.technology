<section id="debugging">
== Debugging</title>
	<para> Just right-click in the source code and add a breakpoint.</para>

	<para>
image::debug10.gif" />
				
			</imageobject>
		</mediaobject>
	</para>
	<para> Then select Debug as -> Python Run</para>
	<para>
image::debug20.gif" />
				
			</imageobject>
		</mediaobject>
	</para>
	<para>You can now inspect and modify the variables in the variables
		view.</para>

	<para>
image::debug30.gif" />
				
			</imageobject>
		</mediaobject>
	</para>
	<para>
		Via the debug buttons (or shortcuts F5, F6, F7, F8) you can move in
		your program.

		<para>
			You can use F5 / F6, F7 and F8 to step through your coding.
		</para>

		<table frame='all'>
	=== Debugging Key bindings</title>
			<tgroup cols='2' align='left' colsep='1' rowsep='1'>
				<colspec colname='c1' />
				<colspec colname='c2' />
				<thead>
					<row>
						<entry>Command</entry>
						<entry>Description</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry>F5 </entry>
						<entry>Goes to the next step in your program. If the next step is
							a method / function this command will jump into the
							associated
							code. </entry>
					</row>
					<row>
						<entry>F6 </entry>
						<entry>F6 will
							step over the call, e.g. it will call a method /
							function without
							entering the associated code.  </entry>
					</row>
					<row>
						<entry>F7</entry>
						<entry>F7 will go to the caller of the
							method/ function. So this
							will leave the current code and go to the
							calling code.  </entry>
					</row>
					<row>
						<entry>F8</entry>
						<entry>Use F8 to go to the next breakpoint. If no further
							breakpoint is encountered then the program will normally run.
						</entry>
					</row>

				</tbody>
			</tgroup>
		</table>

		<para> You can of course use the ui to debug. The following displays
			the key bindings for the debug buttons. </para>
	</para>

	<para>
image::debug40.gif" />
				
			</imageobject>
		</mediaobject>
	</para>



</section>