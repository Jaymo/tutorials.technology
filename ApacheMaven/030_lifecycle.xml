<section id="maven_coreconcepts">
	<title>Maven plug-ins, goals and the life cycle</title>
	<section id="maven_pluginsgoals">
		<title>Maven Plug-ins and goals</title>
		
			A Maven plugin is a collection of one or more
			<wordasword>goals</wordasword>
			. A goal is a
			“unit of work” in Maven. It is possible to execute goals
			independently or a part of a larger chain of goals.
		
		
			Goals can define parameters, which may have default values.
			Plugin goals can be attached to a life cycle phase. The goals are
			executed based on the information found in the POM of the project,
			e.g., the compiler:compile goal checks the POM for relevant
			parameters.
		
	</section>
	<section id="maven_lifecycle">
		<title>Maven life cycle</title>
		
			Every build follows a specified
			<wordasword>life cycle</wordasword>
			. Maven comes with a default
			life cycle
			that includes the most common
			build
			<wordasword>phases</wordasword>
			like compiling,
			testing and packaging.
		
		
			The following lists gives an overview of the important Maven
			life
			cycle phases.
			<itemizedlist>
				<listitem>
					validate - checks if the project is correct and all
						information is available
					
				</listitem>
				<listitem>
					compile - compiles source code in binary artifacts
				</listitem>
				<listitem>
					test - executes the tests
				</listitem>
				<listitem>
					package - takes the compiled code and package it, for example
						into a JAR file.
					
				</listitem>
				<listitem>
					integration-test - takes the packaged result and executes
						additional tests, which require the packaging
					
				</listitem>
				<listitem>
					verify - performs checks if the package is valid
				</listitem>
				<listitem>
					install - install the result of the package phase into the
						local Maven repository
					
				</listitem>
				<listitem>
					deploy - deploys the package to a target, i.e. remote
						repository
					
				</listitem>
			</itemizedlist>
		
		
			For a complete list of the Maven phases see
			<ulink
				url="http://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html#Lifecycle_Reference">Maven life cycle reference
			</ulink>
			.
		
		
			If you instruct Maven to execute a phase,
			Maven executes all
			existing phases n the pre-defined sequence until has executed the
			defined phase.
			All relevant goals are executed during this process. A
			goal is relevant for a phase if the Maven plug-in or the POM bind
			this goal to the corresponding Maven life cycle phase.
		

	</section>
	<section id="maven_packagesgoalbindings">
		<title>Packages and goal bindings</title>
		
			Each packaging contains a list of bindings for goals to a
			particular
			life cycle phase. For example the jar packaging binds the following
			goals to the life cycle phases.
			<table frame='all'>
				<title>Packaging goal</title>
				<tgroup cols='2' align='left' colsep='1' rowsep='1'>
					<colspec colname='c1' colwidth="1*" />
					<colspec colname='c2' colwidth="2*" />
					<thead>
						<row>
							<entry>Life cycle phase</entry>
							<entry>Goal binding</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry>process-resources</entry>
							<entry>resources:resources</entry>
						</row>
						<row>
							<entry>compile</entry>
							<entry>compiler:compile</entry>
						</row>
						<row>
							<entry>process-test-resources</entry>
							<entry>resources:testResources</entry>
						</row>
						<row>
							<entry>test-compile</entry>
							<entry>compiler:testCompile</entry>
						</row>
						<row>
							<entry>test</entry>
							<entry>surefire:test</entry>
						</row>
						<row>
							<entry>package</entry>
							<entry>jar:jar</entry>
						</row>
						<row>
							<entry>install</entry>
							<entry>install:install</entry>
						</row>
						<row>
							<entry>deploy</entry>
							<entry>deploy:deploy</entry>
						</row>
					</tbody>
				</tgroup>
			</table>
		
	</section>

	<section id="maven_packagesgoalbindings2">
		<title>Adding goals to life cycle phases</title>
		You can add goals to life cycle phases by configure more Maven
			plug-ins and add them to a life cycle in your POM file. You need to
			specify which goal should be executed, and if the plug-in does not
			specify the default life cycle it should run, you must also specify
			the life cycle phase it should run.
		
		
			<programlisting language="java">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="./examples/plugin/addgoal.txt" />
			</programlisting>
		

	</section>
</section>