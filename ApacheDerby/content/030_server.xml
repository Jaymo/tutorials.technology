<section id="servermode">
== Server mode
	<section id="servermode_start">
=== Starting Derby in server mode
		 Use the following command in the command line to start the
			Derby network server
			(located in the Derby installation
			directory/bin). On Microsoft Windows it is possible to use the .bat
			version.
		
		
			<programlisting language="bourne">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="../examples/server/startNetworkServer[]
----
		
		

		
		 This will start the network server which can serve an unlimited
			number of database. By default the server will be listening on port
			1527 but this can be changed via the `-p` option.
		
		
			<programlisting language="bourne">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="../examples/server/startNetworkServer2[]
----
		
		By default Derby will only accept connections from the
			localhost. To make the Derby server accept connections also from
			other
			hosts then use the following start command. Replace
			"sampleserver.sampledomain.com" with the name or the IP of the
			server. The server will then accept connections only from other
			servers as the localhost.
		
		
			<programlisting language="bourne">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="../examples/server/startNetworkServer3[]
----
		
		If connections should be allowed from localhost and any other
			server use the following.
		
		
			<programlisting language="bourne">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="../examples/server/startNetworkServer4[]
----
		

	<section id="servermode_java">
=== Connect to the Derby Server via Java
		To connect to the network server via Java code you need to have
			the derbyclient.jar in your classpath. The network connection string
			to this database is the IP
			address of the server:portnumber. For
			example for a server which is
			running on localhost you can create a
			new database via the following
			string.
		
		
			<programlisting language="bourne">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="../examples/server/connect[]
----
		
		If you want to connect to an existing database you can use the
			following string.
		
		
			<programlisting language="bourne">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="../examples/server/connectExisting.txt[]
----
		
		 For example a small Java client might look like the following.
			This assumes that you have already created a schema called a table
			users with the columns "name" and "number".
		
		
[source,text]
----
include::res/server/DerbyTest.java[]
----
		

