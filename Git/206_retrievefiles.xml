[[retrievefiles" role="wrapper">
== Retrieving files from the history

[[retrievefiles_show">
=== View file in different revision
		
			LARSPRIMARYINDEX"git show"LARSPRIMARYINDEX
		
		
			The
			`git show`
			command allows to see and retrieve files from branches, commits and
			tags.
			It allows seeing the status of these files in the selected
			branch, commit or tag without
			checking them out into your working
			tree.
		
		
			By default, this command addresses a file from the root of the
			repository, not the current
			directory. If you want the current
			directory then
			you have to use the ./ specifier. For example to
			address the
			_pom.xml_
			file the current directory use:
			_./pom.xml_

		
		The following commands demonstrate that. You can
			also make a copy
			of the file.

		
		[source,console]
----
include::./examples/show/showrev.txt[]
----

	
[[retrievefiles_fromcommit">
=== Restore a deleted file in a Git repo
		
			You can checkout a file from the commit. To find the commit
			which
			deleted the file you can use the
			`git log`
			or the
			`git ref-list`
			command as demonstrated by the following command.
		

		[source,console]
----
include::./examples/restore/restoredeletedfile.txt[]
----
	



[[retrievefiles_finddeletedfile">
=== See which commit deleted a file
		
			LARSPRIMARYINDEX"Find commit which deleted a file"LARSPRIMARYINDEX
		
		
			LARSPRIMARYINDEX"File deletion log"LARSPRIMARYINDEX
		
		
			LARSPRIMARYINDEX"git log"LARSPRIMARYINDEX
			LARSSECONDARY"file deletion|"LARSSECONDARY
		
		
			The
			`git log`
			command allows you to determine which commit deleted a file. You can
			use
			the
			`--`
			option in
			`git log`
			to see the commit history for a file, even if you have deleted the
			file.
		
		[source,console]
----
include::./examples/show/delete.txt[]
----

	

