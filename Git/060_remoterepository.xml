<section id="remote" role="wrapper">
	<title>Working with remote repositories</title>
	<section id="remote_clone">
		<title>Cloning remote repositories</title>
		
			LARSPRIMARYINDEX"clone repository"LARSPRIMARYINDEX
		
		
			LARSPRIMARYINDEX"protocols supported by Git"LARSPRIMARYINDEX
		
		<para>
			Git supports several transport
			protocols to connect to other Git
			repositories; the native protocol for Git is also called
			<code>git</code>
			.
		</para>
		<para>
			The following command clones an existing repository using the
			Git protocol. The Git protocol uses the port 9148 which might be
			blocked by firewalls.
		</para>
		<para>
			<programlisting language="bourne">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="./examples/remote/checkout.txt" />
			</programlisting>
		</para>
		<para>
			If you have SSH access to a Git repository, you can also use the
			<code>ssh</code>
			protocol. The name preceding @ is the user name used for the SSH
			connection.
		</para>
		<para>
			<programlisting language="bourne">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="./examples/remote/checkoutssh.txt" />
			</programlisting>
		</para>
		<para>
			Alternatively you could clone the same repository via the
			<code>http</code>
			protocol.
		</para>
		<para>
			<programlisting language="bourne">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="./examples/remote/checkouthttp.txt" />
			</programlisting>
		</para>
	</section>
	<section id="remote_add">
		<title>Add more remote repositories</title>
		<para>
			As discussed earlier cloning repository creates a
			<wordasword>remote</wordasword>
			called
			<code>origin</code>
			pointing to the remote repository which you cloned from.
			You can push
			changes to this
			repository via
			<code>git push</code>
			as Git uses
			<parameter>origin</parameter>
			as default.
			Of course, pushing to a remote repository requires write
			access to
			this
			repository.
		</para>
		<para>
			You can add more
			<wordasword>remotes</wordasword>
			via
			the
			<code>git
				remote
				add [name] [URL_to_Git_repo]
			</code>
			command. For example, if you cloned the
			repository from
			above
			via the
			Git
			protocol, you could add a new remote with the name
			<wordasword>github_http</wordasword>
			for the http
			protocol via the following command.
		</para>
		<para>
			<programlisting language="bourne">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="./examples/add/addremote.txt" />
			</programlisting>
		</para>
	</section>
	<section id="remote_rename">
		<title>Rename remote repositories</title>
		<para>
			To rename an existing remote repository use the
			<code>git remote rename</code>
			command. This is demonstrated by the following listing.
		</para>
		<para>
			<programlisting language="bourne">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="./examples/add/renameremote.txt" />
			</programlisting>
		</para>
	</section>

	<section id="remote_httpprotocol">
		<title>Remote operations via HTTP</title>
		
			LARSPRIMARYINDEX"HTTP as Git protocol"LARSPRIMARYINDEX
		
		
			LARSPRIMARYINDEX"proxy support in Git"LARSPRIMARYINDEX
		
		<para>
			It is possible to use the HTTP protocol to clone Git
			repositories. This
			is especially helpful if your firewall blocks
			everything except HTTP or HTTPS.
		</para>
		<para>
			<programlisting language="bourne">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="./examples/proxy/http.txt" />
			</programlisting>
		</para>
		<para>
			For secured SSL encrypted communication you should use the SSH
			or HTTPS
			protocol in order to
			guarantee security.
		</para>
	</section>
	<section id="remote_httpproxy">
		<title>Using a proxy</title>
		<para>
			Git also provides support for HTTP access via a proxy server.
			The
			following Git
			command could, for example, clone a repository
			via
			HTTP and
			a proxy.
			You can
			either set the proxy variable in general for
			all
			applications
			or set
			it only for Git.
		</para>
		<para>The following listing configures the proxy via environment variables.
		</para>
		<para>
			<programlisting language="bourne">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="./examples/proxy/proxy.txt" />
			</programlisting>
		</para>
		<para>The following listing configures the proxy via Git config settings.
		</para>
		<para>
			<programlisting language="bourne">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="./examples/proxy/proxy2.txt" />
			</programlisting>
		</para>
		<tip>
			<para>
				Git is able to store different proxy configurations for
				different
				domains, see
				<parameter>core.gitProxy</parameter>
				in
				<ulink url="http://git-scm.com/docs/git-config">Git config manpage</ulink>
				.
			</para>
		</tip>
	</section>
</section>
