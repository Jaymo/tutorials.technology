[[interactive_rebase">
== Editing history with the interactive rebase
	
		LARSPRIMARYINDEX"git rebase"LARSPRIMARYINDEX
		LARSSECONDARY"interactive"LARSSECONDARY
	

	
		LARSPRIMARYINDEX"rebase plan"LARSPRIMARYINDEX
	
	
		LARSPRIMARYINDEX"Interactive rebase"LARSPRIMARYINDEX
	
	
		Git allows you to edit your commit history with a functionality called
		`interactive rebase`
		. For example, you can
		combine several commits into
		one commit,
		reorder
		or skip commits and
		edit the commit message.
	

	
		This is
		useful as it allows
		the user to rewrite
		some
		commit
		history
		(cleaning it up) before
		pushing the changes
		to a
		remote
		repository.
	

	
		Interactive rebase allows you to quickly edit a series of commits
		using
		the following actions:

.Table Title
|===

	=== Interactive rebase actions
			<tgroup cols='2' align='left' colsep='1' rowsep='1'>
				<colspec colname='c1' colwidth="1*" />
				<colspec colname='c2' colwidth="3*" />
				
					
|Action
|Description
					
				
				
                        
|pick
|includes the selected commit, moving pick entries enables
                                reordering of commits
                            
                        
                        
|skip
|removes a commit
                        
                        
|edit
|amends the commit
                            
                        
                        
|squash
|combines the changes of the commit with the previous
                                commit
                                and combines their commit messages
                            
                        
                        
|fixup
|squashes the changes of a commit into the previous
                                commit discarding the squashed commit's message
                            
                        
                        
|reword
|similar to pick but allows modifying the commit message
                            
                        
                        
				
			
		|===

	
	
		The setup for the rebase is called the
		_rebase plan_
		. Based on this plan, the actual interactive rebase can be executed.
	

	<warning>
		
			It is
			safe
			to use interactive rebase as long as the commits have
			not been pushed to another
			repository. As the interactive rebase
			creates new commit objects, other developers might be confused if you
			rebase already published changes.
		
	


