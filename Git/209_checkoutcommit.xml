<section id="undochanges_checkoutcommits" role="wrapper">
	<title>Resetting the working tree based on a commit
	<section id="undochanges_checkoutcommits1">
		<title>Checkout based on commits and working tree
		
			LARSPRIMARYINDEX"git checkout"LARSPRIMARYINDEX
			LARSSECONDARY"based on commit ID"LARSSECONDARY
		
		
			You can check out older revisions of your file system via the git
			checkout command followed by the
			commit
			ID. This command will reset
			your
			complete
			_working tree_
			to the status described by this commit.
		

		
			The
			commit ID is shown if you enter the
			`git log`
			command.
		

		The following command shows the log.
		[source,terminal]
----
include::./examples/commandline/git_checkout1[]
----
		
			The following listing shows an example output of a Git log
			command.
		
		[source,terminal]
----
include::./examples/commandline/git_checkout2[]
----
	</section>
	<section id="undochanges_checkoutcommits2">
		<title>Example: Checkout a commit
		
			To checkout a specific commit you can use the following command.
		
		[source,terminal]
----
include::./examples/commandline/git_checkout3[]
----
		<warning>
			
				If you checkout a commit, you are in the
				_detached head mode_
				and commits in this mode are harder to find after you checkout
				another
				branch. Before committing it is good practice to create a new
				branch to leave the
				_detached head mode_
				. See
				<xref linkend="detachedheadmode" />
				for details.
			
		</warning>
	</section>
</section>