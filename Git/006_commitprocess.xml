<section id="git" role="wrapper">
	<title>The process of adding to a Git repository via staging and committing</title>
	<section id="git_addtorepository">
		<title>Adding changes to a Git repository</title>
		<indexterm>
			<primary>Adding files to the Git repository</primary>
		</indexterm>
		<para>
			If you modify your
			<wordasword>working tree</wordasword>
			(see
			<xref linkend="workingtree" />
			) you
			need
			to
			perform two
			steps to persist these changes
			in your local
			repository. You

			<itemizedlist>
				<listitem>
					<para>
						add selected changes to the something called the
						<wordasword>staging area</wordasword> and
					</para>
				</listitem>
				<listitem>
					<para>
						afterwards you commit the changes stored in the
						<wordasword>staging area</wordasword>
						to the repository
					</para>
				</listitem>
			</itemizedlist>

		</para>
		<para>This process is depicted in the following graphic. </para>
		<para>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/committingprocess10.png"/>
				</imageobject>
				<textobject>
					<phrase>Git commit process</phrase>
				</textobject>
			</mediaobject>
		</para>
	</section>


	<section id="git_stagingprocess">
		<title>Adding to the staging area</title>
		<indexterm>
			<primary>Staging process</primary>
		</indexterm>
		<indexterm>
			<primary>Staging area</primary>
		</indexterm>
		<indexterm>
			<primary>Index</primary>
			<seealso>Staging area</seealso>
		</indexterm>
		<para>
			You need to
			mark changes in the working tree
			to be relevant for
			Git.
			This process is called
			<wordasword>staging</wordasword>
			or
			<wordasword>to add changes to the staging area</wordasword>
			.
		</para>

		<para>
			You add changes in the working tree to the
			staging area
			with the
			<code>git add</code>
			command. This command stores a snapshot of the specified files in
			the
			staging area.
		</para>
		<para>
			The
			<code>git add</code>
			command allows you to incrementally modify files, stage them,
			modify
			and
			stage
			them again until you are satisfied with
			your changes.
		</para>

		<para>
			Older versions of Git used the term
			<wordasword>index</wordasword>
			instead of staging area. Staging area
			is nowadays the preferred term
			by
			the Git community. Both terms mean the same
			thing.
		</para>

	</section>
	<section id="git_commitprocess">
		<title>Committing to the repository</title>
		<indexterm>
			<primary>Commit process</primary>
		</indexterm>
		<para>
			After adding
			the selected
			files to the staging area, you can
			<wordasword>commit</wordasword>
			these files to add them permanently to the Git repository.
			<wordasword>Committing</wordasword>
			creates a new persistent snapshot (called
			<wordasword>commit</wordasword>
			or
			<wordasword>commit object</wordasword>
			)
			of the staging area
			in the Git repository. A commit object, like all
			objects in Git, is
			immutable.
		</para>
		<para>
			The
			<wordasword>staging area</wordasword>
			keeps track of the snapshots of the files until the staged changes
			are committed.
		</para>
		<para>
			For committing the staged changes you use the
			<code>git commit</code>
			command.
		</para>

	</section>
	<section id="commits">
		<title>Committing changes</title>
		<indexterm>
			<primary>Committing</primary>
		</indexterm>
		<para>
			If you commit changes to your Git repository, you create
			a new
			<wordasword>commit object</wordasword>
			in the Git repository. See
			<xref linkend="commit_object" />
			for information about the commit object.
		</para>
	</section>

</section>

