<section id="gitbranchfiles" role="wrapper">
	<title>Working with branches</title>
	<section id="gitbranch_untrackedfiles">
		<title>Switching branches with untracked files</title>
		<indexterm>
			<primary>switch branch</primary>
			<secondary>with untrack files</secondary>
		</indexterm>
		<para>Untracked files (never added to the staging area) are unrelated
			to
			any branch. They exist only in
			the working tree and are ignored by
			Git
			until they are committed to the Git repository. This
			allows
			you to
			create a branch for unstaged and
			uncommitted
			changes at any
			point
			in
			time.
		</para>

	</section>
	<section id="gitbranch_dirtyfiles">
		<title>Switching branches with uncommitted changes</title>
		<indexterm>
			<primary>switch branch</primary>
			<secondary>with uncommitted changes</secondary>
		</indexterm>
		<para>Similar to untracked files you can switch branches with unstaged
			or staged modifications which are not yet committed.
		</para>
		<para>
			You can switch branches if the modifications
			do
			not
			conflict with
			the
			files from the branch.
		</para>
		<para>
			If Git
			needs to
			modify a
			changed
			file during the
			checkout of a
			branch, the checkout
			fails
			with
			a
			"checkout
			conflict"
			error. This
			avoids
			that you lose
			changes in your files.
		</para>
		<para>
			In this case the
			changes
			must be
			committed,
			reverted or
			stashed (see
			<xref linkend="stash_usage1" />
			). You
			can also always create a new branch based on
			the current HEAD.
		</para>

	</section>

</section>
