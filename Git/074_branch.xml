<section id="gitbranch" role="wrapper">
	<title>Commands to working with branches</title>
	<section id="gitbranch_listbranches">
		<title>List available branches</title>
		
			LARSPRIMARYINDEX"git branch"LARSPRIMARYINDEX
		
		<para>
			The
			<code>git branch</code>
			command lists all
			local branches. The
			currently
			active
			branch is marked
			with
			<code>*</code>
			.
		</para>
		[source,terminal]
----
include::./examples/commandline/git_brancheslist.commands[]
----
		<para>
			If you want to see all branches (including remote-tracking
			branches),
			use
			the
			<parameter>-a</parameter>
			for the
			<code>git branch</code>
			command. See
			<xref linkend="gitremotebranch_overview" />
			for information about remote-tracking branches.
		</para>
		[source,terminal]
----
include::./examples/commandline/git_brancheslist2.commands[]
----
		<para>
			The
			<parameter>-v</parameter>
			option lists more information about the branches.
		</para>

		<para>
			In order to list branches in a remote repository use the
			<code>git branch -r</code>
			command as demonstrated in the following example.
		</para>
		[source,terminal]
----
include::./examples/commandline/git_brancheslist3.commands[]
----

	</section>

	<section id="gitbranch_createnewbranch">
		<title>Create new branch</title>
		
			LARSPRIMARYINDEX"create new branch"LARSPRIMARYINDEX
		
		
			LARSPRIMARYINDEX"git branch"LARSPRIMARYINDEX
			LARSSECONDARY"create new branch"LARSSECONDARY
		
		<para>
			You can create a new branch via the
			<code>git branch [newname]</code>
			command. This command allows to specify the starting
			point
			(commit id,
			tag, remote or local branch). If
			not specified the
			commit to which the
			HEAD reference points
			is used to create
			the branch.
		</para>
		[source,terminal]
----
include::./examples/branch/git_create_branch[]
----


	</section>

	<section id="gitbranch_checkout">
		<title>Checkout branch</title>
		
			LARSPRIMARYINDEX"checkout branch"LARSPRIMARYINDEX
		
		
			LARSPRIMARYINDEX"git checkout"LARSPRIMARYINDEX
		
		<para>
			To start working in a branch you have to

			<wordasword>checkout</wordasword>
			the branch. If you
			<wordasword>checkout</wordasword>
			a branch, the HEAD pointer moves to the last commit in this branch
			and
			the files in the working tree are set to the state of this commit.
		</para>

		<para>
			The following commands demonstrate how you switch to the branch
			called
			<wordasword>testing</wordasword>
			, perform some changes in this branch and switch back to the branch
			called
			<wordasword>master</wordasword>
			.
		</para>
		[source,terminal]
----
include::./examples/branch/git_checkout[]
----
		<para>
			To create a branch and to switch to it at the same time you can use
			the
			<code>git checkout</code>
			command with the
			<parameter>-b</parameter>
			parameter.
		</para>

		[source,terminal]
----
include::./examples/branch/git_createcheckout[]
----


	</section>
	<section id="git_rename_branch">
		<title>Rename a branch</title>
		
			LARSPRIMARYINDEX"rename branch"LARSPRIMARYINDEX
		
		<para>Renaming a branch can be done with the following command.
		</para>
		[source,terminal]
----
include::./examples/branch/git_rename_branch[]
----
	</section>
	<section id="gitdeletebrach">
		<title>Delete a branch</title>
		
			LARSPRIMARYINDEX"delete local branch"LARSPRIMARYINDEX
		
		<para>
			To delete a branch which is not needed anymore, you can use
			the following command. You may get an error message that there are
			uncommited changes if you did the previous examples step by step.
			Use force delete (uppercase <parameter>-D</parameter>) to delete it
			anyway.
		</para>
		[source,terminal]
----
include::./examples/branch/git_delete_branch[]
----
	</section>
	<section id="gitpushbranch">
		
			LARSPRIMARYINDEX"push branch"LARSPRIMARYINDEX
		
		<title>Push changes of a branch to a remote repository</title>
		<para>
			You can push the changes in the current active branch to a
			remote repository by specifying the target branch. This creates the
			target branch in the remote repository if it does not yet exist.
		</para>
		[source,terminal]
----
include::./examples/branch/git_pushbranch.txt[]
----
		<para>
			This way you can decide which branches you want to push to other
			repositories and which should be local branches. You learn more about
			branches and remote repositories in
			<xref linkend="gitremotebranch_overview" />
			.
		</para>


	</section>

</section>
