[[using">
== Mercurial usage with the command line
[[using_overview">
=== Overview
		 The following will demonstrate a short development cycle
			using
			the
			command line interface of Mercurial.
		
		 You will create a new Mercurial repository, create a new
			Java project and commit the changes to your Mercurial repository.
		
		The command for using Mercurial on the command line is "hg".
	
[[using_prepare">
=== Prepare
		 Check that you are using Mercurial version 1.3 or higher:
		
		
			<programlisting>
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="../examples/using/version.txt[]
----
		

		 Create and switch to your desired work directory . 

		 Initialize a new Mercurial repository with:
		
		
			<programlisting>
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="../examples/using/clone.txt[]
----
		

		
			<tip>
				If you have an existing project you could clone, e.g. create a
				copy
				of, your repository
				via the following command.

				
					<programlisting>
						<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
							parse="text" href="../examples/using/clone.txt" />
					</programlisting>
				
			
		

		
			Eclipse creates a lot of metadata with regards to the current status
			of the Eclipse workbench. Also Eclipse creates compiled version in
			the directory bin. This data should not be placed in the
			mercurial
			repository. Create the file ".hgignore" in the same directory as
			the
			hg
			project.

			<programlisting>
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="../examples/ignore/hgignore.txt[]
----
		
	
[[using_javaproject">
=== Create Java Project

		Start Eclipse and use the new directory as workspace. Create a
			new Java
			project "de.vogella.mercurial.firstproject". Create the
			following Java
			class.
		
		
			<programlisting>
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="../examples/javaproject/Test.java[]
----
		
	

[[using_commit">
=== Add Project to Mercurial and commit
		 Add the project to Mercurial.  
		
			<programlisting>
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="../examples/using/add.txt[]
----
		
		 Commit.  
		
			<programlisting>
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="../examples/using/commit.txt[]
----
		

		 If you have checked out the Mercurial project from another site
			you can push your changes to the repository.
		
		
			<programlisting>
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="../examples/using/push.txt[]
----
		

		 Check the history via:
		
			<programlisting>
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="../examples/using/log.txt[]
----
		
	

[[using_delta">
=== Making changes
		 Rename your Java class to "TestNewName" and create a new class
			"Test2".
		

		
			<programlisting>
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="../examples/javaproject/Test2.java[]
----
		
		 Add the new files to Mercurial.  
		
			<programlisting>
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="../examples/using/add.txt[]
----
		
		 A rename in Java removes the old file. Mercurial will report
			these files as missing (hg status). You can use the following command
			to automatically add the new files and remove the deleted.
		
		 Add the new files to Mercurial.  
		
			<programlisting>
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="../examples/using/addremove.txt[]
----
		

		 You can now commit. The -A flag in the commit command would
			also automatically add and remove new files.
		
		
			<programlisting>
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="../examples/using/commitadd.txt[]
----
		
	
[[using_diff">
=== See changes

		To see the changes use the status command. diff we show the
			differences.
		
		
			<programlisting>
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="../examples/using/changes.txt[]
----
		
	
[[using_revert">
=== Revert

		You can revert the changes via "hg revert". 
		
			<programlisting>
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
					parse="text" href="../examples/using/revert.txt[]
----
		

	


