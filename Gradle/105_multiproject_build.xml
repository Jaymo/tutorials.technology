<section id="gradle_multiproject_build">
	<title>Building multiple projects with Gradle
	<section id="gradle_multiproject_build_structure">
		<title>Creating a multi project build structure
		
			A business application usually does not consist of only one
			single project/module, but has many projects, which
			should be build.
		
		
			Gradle has the concept of a root project, which can have many sub
			projects. The root project is specified by a
			<filename>build.gradle</filename>
			file, like the single projects before. To specify, which projects
			belong to the build a
			<filename>settings.gradle</filename>
			file is used.
		
		
			For instance there might be this project structure:
			<itemizedlist>
				<listitem>
					root_project
					
					<itemizedlist>
						<listitem>
							core
						</listitem>
						<listitem>
							ui
						</listitem>
						<listitem>
							util
						</listitem>
						<listitem>
							settings.gradle
						</listitem>
					</itemizedlist>
				</listitem>
			</itemizedlist>
		
		
			Having this project structure the
			<filename>settings.gradle</filename>
			file would look like this:
		
		
			<programlisting language="gradle">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" parse="text"
					href="./examples/multiproject/simple_settings.gradle" />
			</programlisting>
		
		
			Besides the
			<parameter>tasks</parameter>
			task Gradle also provides a
			<parameter>projects</parameter>
			help task, which can be run in the
			<filename>root_project</filename>
			folder.
		
		
			<programlisting language="gradle">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" parse="text"
					href="./examples/multiproject/projects_task.cmdline" />
			</programlisting>
		
		
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/projects_task.png" />
				</imageobject>
			</mediaobject>
		
	</section>
	<section>
		<title>Specifying a general build configuration
		
			In a
			<filename>build.gradle</filename>
			file in the root_project general configurations can be applied to all
			projects or just to the sub projects.
		
		
			<programlisting language="gradle">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" parse="text" href="./examples/multiproject/root_build.gradle" />
			</programlisting>
		
		
			This specifies a common
			<parameter>com.example.gradle</parameter>
			group and the
			<parameter>0.1.0</parameter>
			version to all projects.
		
		
			The
			<parameter>subprojects</parameter>
			closure applies common configurations for all sub projects, but not
			to the root project, like the
			<parameter>allprojects</parameter>
			closure does.
		
	</section>
	<section>
		<title>Project specific configurations and dependencies
		
			The
			<parameter>core</parameter>
			,
			<parameter>ui</parameter>
			and
			<parameter>util</parameter>
			sub projects can also have their own
			<filename>build.gradle</filename>
			file, if they have specific needs, which are not already applied by
			the general configuration of the root project.
		
		
			For instance the ui project usually has a dependency to the core
			project. So the ui project needs its own
			<filename>build.gradle</filename>
			file to specify this dependency.
		
		
			<programlisting language="gradle">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" parse="text" href="./examples/multiproject/ui_build.gradle" />
			</programlisting>
		
		
			Project dependencies are specified with the project method.
		
		
			<note>
				
					The
					<parameter>':'</parameter>
					before the core project reference is Gradle specific and acts
					pretty much like
					a slash (
					<parameter>'/'</parameter>
					), when referencing a folder structure.
				
			</note>
		
		Alternatively you can also define the dependencies of a project in the root build.gradle file. But it is
			considered good practice to define the dependencies in the project specific build.gradle files, hence the following
			approach is only included for demonstration purpose.
		

		
			<programlisting language="gradle">
				<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" parse="text"
					href="./examples/multiproject/ui_build_master.gradle" />
			</programlisting>
		


	</section>
</section>
	